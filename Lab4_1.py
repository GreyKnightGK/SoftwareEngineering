# Импорт класса datetime из модуля datetime
from datetime import datetime
# Импорт функции sqrt из модуля math
from math import sqrt

# Объявление функции main
def main(**kwargs):
    """
    Вычисляет длину гипотенуз прямоугольных треугольников.

    Аргументы:
        **kwargs (dict): Словарь, в котором ключ - наименование треугольника, а значения - список длин его катетов.

    Возвращаемое значение:
        Отсутствует. Результат выводится на экран.

    Пример:
        main(one=[10, 3], two=[5, 4], three=[15, 13])
    """
    # Перебор элементов словаря kwargs в цикле
    # Значение элемента в итерации цикла передается в кортеж key
    for key in kwargs.items():
        # Вычисление гипотенузы по теореме Пифагора:
        #   значения списка возводятся в квадрат, находится их сумма, а затем вычисляется квадратный корень от суммы;
        #   получившееся значение сохраняется в переменную result.
        result = sqrt(key[1][0] ** 2 + key[1][1] ** 2)
        # Вывод значения переменной result на экран
        print(result)

# Проверка, что модуль выполняется как точка входа в программу (запускается напрямую, а не импортируется в другой модуль)
# В случае импорта в другой модуль нижеприведенный код не будет выполнен
if __name__ == '__main__':
    # Сохранение в переменную start_time текущего времени (времени начала выполнения программы)
    start_time = datetime.now()
    # Вызов функции main с передачей пяти именованных аргументов
    main(
        one=[10, 3],
        two=[5, 4],
        three=[15, 13],
        four=[93, 53],
        five=[133, 15]
    )
    # Вычисление длительности выполнения программы как разницы между текущим временем и значением переменной start_time
    # Полученное значение сохраняется в переменную time_costs
    time_costs = datetime.now() - start_time
    # Вывод на экран с использованием f-строки длительности выполнения программы
    print(f"Время выполнения программы - {time_costs}")